[{"/Users/jpa/Desktop/coding-aa/react-flask-app/src/index.js":"1","/Users/jpa/Desktop/coding-aa/react-flask-app/src/App.js":"2","/Users/jpa/Desktop/coding-aa/react-flask-app/src/reportWebVitals.js":"3","/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/Main.js":"4","/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/Header.js":"5","/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/Lists.js":"6","/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/Tasks.js":"7","/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/DropDown.js":"8","/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/Task.js":"9","/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/ListForm.js":"10"},{"size":500,"mtime":1609777368418,"results":"11","hashOfConfig":"12"},{"size":2077,"mtime":1652788499668,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1609777368419,"results":"14","hashOfConfig":"12"},{"size":413,"mtime":1611004387334,"results":"15","hashOfConfig":"12"},{"size":442,"mtime":1610829554398,"results":"16","hashOfConfig":"12"},{"size":1522,"mtime":1652787238314,"results":"17","hashOfConfig":"12"},{"size":1107,"mtime":1652787238316,"results":"18","hashOfConfig":"12"},{"size":558,"mtime":1612294117390,"results":"19","hashOfConfig":"12"},{"size":616,"mtime":1611353560720,"results":"20","hashOfConfig":"12"},{"size":488,"mtime":1612294129231,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"ywe5fy",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"24"},"/Users/jpa/Desktop/coding-aa/react-flask-app/src/index.js",[],["50","51"],"/Users/jpa/Desktop/coding-aa/react-flask-app/src/App.js",["52","53","54"],"/Users/jpa/Desktop/coding-aa/react-flask-app/src/reportWebVitals.js",[],"/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/Main.js",["55","56"],"// import React from 'react';\n\nimport './Main.css';\nimport Header from './Header';\nimport Lists from './Lists';\nimport Tasks from './Tasks';\n\nexport default function ({ user, lists, tasks }) {\n  return (\n    <div\n      className=\"main\">\n      <Header user={user}>\n      </Header>\n      <Lists lists={lists} tasks={tasks}></Lists>\n      {/* <Tasks tasks={tasks} taskListId={lists.id}></Tasks> */}\n    </div>\n  )\n}\n","/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/Header.js",["57","58"],"import './Header.css';\nimport todo from '../todo.png';\n\nexport default function ({ user }) {\n  console.log(user)\n  return (\n    <div className=\"main__header\">\n      <div className=\"header__left\" key={user}>\n        {`Welcome, ${user.firstname} ${user.lastname}`}\n      </div>\n      <div className=\"header__center\">\n        <img className=\"logo\" src={todo}></img>\n      </div>\n      <div className=\"header__right\">Right</div>\n    </div>\n  )\n}\n","/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/Lists.js",["59","60","61","62"],"import { useState, useEffect } from 'react';\nimport './Lists.css';\nimport Tasks from './Tasks';\nimport DropDown from './DropDown';\n\nexport default function ({ lists, tasks }) {\n  const [listId, setListId] = useState(1);\n  const [filteredTasks, setFilteredTasks] = useState();\n  const [liveLists, setLiveLists] = useState(lists);\n  const grabListId = (id) => {\n    console.log(\"KEY:\", id)\n    // setListId(id);\n    console.log(tasks)\n    setFilteredTasks(tasks.filter((task) => task.taskListId === id));\n  }\n  const createList = async (title) => {\n    console.log(\"CREATE LIST\")\n    const res = await fetch('/list', {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userId: 1,\n        title\n      })\n    })\n    if (res.ok) {\n      const list = await res.json();\n      console.log(list);\n      setLiveLists([...lists, list]);\n    }\n  }\n  useEffect(() => {\n    console.log(\"use effect\")\n    setFilteredTasks(tasks);\n    setLiveLists(lists);\n    console.log(lists, tasks)\n  }, [lists]);\n\n  return (\n    <>\n      <div className=\"main__lists lists\">\n        <h3 className=\"lists__header\">\n          My Lists\n          <DropDown createList={createList} />\n        </h3>\n        {liveLists.map((list) => (\n          <div\n            listid={list.id}\n            onClick={() => grabListId(list.id)}\n            className=\"lists__title\">\n            {list.title}\n          </div>\n        ))}\n      </div>\n      {<Tasks tasks={filteredTasks} ></Tasks>}\n    </>\n  )\n}\n","/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/Tasks.js",["63"],"import './Tasks.css';\nimport Task from './Task';\nimport React, { useEffect, useState } from 'react';\n\nexport default function ({ tasks }) {\n  let [tasksState, setTasksState] = useState();\n  const sortByDone = (tasks) => {\n    const tempNorm = [];\n    const tempDone = []\n    for (let i = 0; i < tasks.length; i++) {\n      let task = tasks[i];\n      if (task.done) {\n        tempDone.push(task);\n      } else {\n        tempNorm.push(task);\n      }\n    }\n    return setTasksState([...tempNorm, ...tempDone]);\n  }\n\n  const createTask = () => {\n    console.log(\"CREATE TASK\");\n  }\n\n\n  useEffect(() => {\n    setTasksState(tasks);\n  }, [tasks])\n\n  return (\n    <div className=\"main__tasks tasks\"\n      onClick={() => sortByDone(tasksState)}\n    >\n      <h3 className=\"tasks__header\">\n        Associated Tasks\n        <button className=\"tasks__button\" onClick={createTask}>Add Task</button>\n      </h3>\n      { tasksState ? tasksState.map(task => (\n        <Task task={task}\n          done={task.done}\n          // sortByClicked={sortByClicked}\n          key={task.id}\n        />\n      )) : null}\n    </div>\n  )\n}\n","/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/DropDown.js",["64"],"import { useState } from 'react';\nimport ListForm from './ListForm';\nimport './DropDown.css';\n\nexport default function ({ createList }) {\n  const [showForm, setShowForm] = useState(false);\n\n  const pop = () => {\n    console.log(\"POP\")\n    setShowForm(!showForm);\n  }\n\n  return (\n    <div className=\"lists__dropdown\">\n      <button onClick={pop} className=\"lists__button\">Add List</button>\n      <div className=\"lists__dropdown-content\">\n        {showForm ? <ListForm createList={createList} setShowForm={setShowForm} /> : null}\n      </div>\n    </div>\n  )\n}\n","/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/Task.js",["65","66"],"import { useState, useEffect } from 'react';\nimport './Task.css';\n\nexport default function ({ task }) {\n  // const [done, setDone] = useState(task.done);\n  // const [taskState, setTaskState] = useState(task)\n  const [classNames, setClassNames] = useState(\"tasks__task\");\n  const handleClick = () => {\n    // setDone(!done);\n    task.done = !task.done;\n    setClassNames(`tasks__task ${task.done ? \" task__done\" : \"\"}`);\n    // console.log(task.done, classNames)\n    // sortByClicked(task.id)\n  }\n\n  return (\n    <div\n      className={classNames}\n      onClick={handleClick}\n    >\n      {task.title}\n    </div>\n  )\n}\n","/Users/jpa/Desktop/coding-aa/react-flask-app/src/components/ListForm.js",["67"],"import { useState } from 'react';\nimport './ListForm.css'\n\nexport default function ({ createList, setShowForm }) {\n  const [title, setTitle] = useState(\"\");\n\n  return (\n    <div className=\"dropdown-container\">\n      <input className=\"dropdown-input\" name=\"list-entry\" type=\"text\" onChange={(e) => setTitle(e.target.value)}></input>\n      <button className=\"dropdown-button\" onClick={() => {\n        createList(title);\n        setShowForm(false);\n      }}>Create</button>\n    </div>\n  )\n}\n",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":6,"column":3,"nodeType":"74","messageId":"75","endLine":6,"endColumn":7},{"ruleId":"76","severity":1,"message":"77","line":41,"column":6,"nodeType":"78","endLine":41,"endColumn":8,"suggestions":"79"},{"ruleId":"76","severity":1,"message":"80","line":55,"column":6,"nodeType":"78","endLine":55,"endColumn":8,"suggestions":"81"},{"ruleId":"72","severity":1,"message":"82","line":6,"column":8,"nodeType":"74","messageId":"75","endLine":6,"endColumn":13},{"ruleId":"83","severity":1,"message":"84","line":8,"column":1,"nodeType":"85","endLine":18,"endColumn":2},{"ruleId":"83","severity":1,"message":"84","line":4,"column":1,"nodeType":"85","endLine":17,"endColumn":2},{"ruleId":"86","severity":1,"message":"87","line":12,"column":9,"nodeType":"88","endLine":12,"endColumn":42},{"ruleId":"83","severity":1,"message":"84","line":6,"column":1,"nodeType":"85","endLine":58,"endColumn":2},{"ruleId":"72","severity":1,"message":"89","line":7,"column":10,"nodeType":"74","messageId":"75","endLine":7,"endColumn":16},{"ruleId":"72","severity":1,"message":"90","line":7,"column":18,"nodeType":"74","messageId":"75","endLine":7,"endColumn":27},{"ruleId":"76","severity":1,"message":"91","line":37,"column":6,"nodeType":"78","endLine":37,"endColumn":13,"suggestions":"92"},{"ruleId":"83","severity":1,"message":"84","line":5,"column":1,"nodeType":"85","endLine":47,"endColumn":2},{"ruleId":"83","severity":1,"message":"84","line":5,"column":1,"nodeType":"85","endLine":21,"endColumn":2},{"ruleId":"72","severity":1,"message":"93","line":1,"column":20,"nodeType":"74","messageId":"75","endLine":1,"endColumn":29},{"ruleId":"83","severity":1,"message":"84","line":4,"column":1,"nodeType":"85","endLine":24,"endColumn":2},{"ruleId":"83","severity":1,"message":"84","line":4,"column":1,"nodeType":"85","endLine":16,"endColumn":2},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has a missing dependency: 'lists'. Either include it or remove the dependency array.",["97"],"'Tasks' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'listId' is assigned a value but never used.","'setListId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'tasks'. Either include it or remove the dependency array. If 'setFilteredTasks' needs the current value of 'tasks', you can also switch to useReducer instead of useState and read 'tasks' in the reducer.",["98"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [user]",{"range":"105","text":"106"},"Update the dependencies array to be: [lists]",{"range":"107","text":"108"},"Update the dependencies array to be: [lists, tasks]",{"range":"109","text":"110"},[983,985],"[user]",[1321,1323],"[lists]",[1039,1046],"[lists, tasks]"]
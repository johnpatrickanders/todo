{"ast":null,"code":"var _jsxFileName = \"/Users/jpa/Desktop/coding-aa/react-flask-app/client/src/components/Lists.js\";\nimport { useState, useEffect, useContext } from 'react';\nimport './Lists.css';\nimport Tasks from './Tasks';\nimport DropDown from './DropDown';\nimport { UserContext } from '../App';\nimport List from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function () {\n  const {\n    lists,\n    user,\n    dispatch\n  } = useContext(UserContext);\n  const initialListState = {\n    id: null,\n    title: 'Select a List'\n  };\n  const [selectedList, setSelectedList] = useState(lists[0] ? lists[0] : initialListState);\n\n  const grabListInfo = (id, title) => {\n    setSelectedList({\n      id,\n      title\n    });\n  };\n\n  const createList = async title => {\n    const res = await fetch('/api/list', {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userId: user.id,\n        title\n      })\n    });\n\n    if (res.ok) {\n      const list = await res.json();\n      dispatch({\n        type: 'lists',\n        payload: {\n          lists: [...lists, list]\n        }\n      });\n    }\n  };\n\n  const resetListState = () => {\n    setSelectedList(initialListState);\n  };\n\n  useEffect(() => {\n    if (!lists.length) {\n      resetListState();\n    }\n  }, [lists]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main__lists lists\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"lists__header\",\n        children: [\"My Lists\", /*#__PURE__*/_jsxDEV(DropDown, {\n          handleCreate: createList,\n          buttonLabel: \"Add List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), lists.map(list => /*#__PURE__*/_jsxDEV(List, {\n        listid: list.id,\n        list: list,\n        grabListInfo: grabListInfo,\n        lists: lists,\n        dispatch: dispatch,\n        selectedListId: selectedList.id,\n        resetListState: resetListState\n      }, String(list.id) + String(list.updateDate), false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n      taskListId: selectedList.id,\n      taskListTitle: selectedList.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"names":["useState","useEffect","useContext","Tasks","DropDown","UserContext","List","lists","user","dispatch","initialListState","id","title","selectedList","setSelectedList","grabListInfo","createList","res","fetch","method","headers","body","JSON","stringify","userId","ok","list","json","type","payload","resetListState","length","map","String","updateDate"],"sources":["/Users/jpa/Desktop/coding-aa/react-flask-app/client/src/components/Lists.js"],"sourcesContent":["import { useState, useEffect, useContext } from 'react';\nimport './Lists.css';\nimport Tasks from './Tasks';\nimport DropDown from './DropDown';\nimport { UserContext } from '../App';\nimport List from './List';\n\nexport default function () {\n  const { lists, user, dispatch } = useContext(UserContext);\n  const initialListState = { id: null, title: 'Select a List' }\n  const [selectedList, setSelectedList] = useState(lists[0] ? lists[0] : initialListState)\n  const grabListInfo = (id, title) => {\n    setSelectedList({ id, title })\n  }\n  const createList = async (title) => {\n    const res = await fetch('/api/list', {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        userId: user.id,\n        title\n      })\n    })\n    if (res.ok) {\n      const list = await res.json();\n      dispatch({\n        type: 'lists',\n        payload: {\n          lists: [...lists, list]\n        }\n      })\n    }\n  }\n\n  const resetListState = () => {\n    setSelectedList(initialListState);\n  }\n\n  useEffect(() => {\n    if (!lists.length) {\n      resetListState();\n    }\n  }, [lists]);\n\n  return (\n    <>\n      <div className=\"main__lists lists\">\n        <h3 className=\"lists__header\">\n          My Lists\n          <DropDown handleCreate={createList} buttonLabel=\"Add List\" />\n        </h3>\n        {lists.map((list) => (\n          <List\n            listid={list.id}\n            key={String(list.id) + String(list.updateDate)}\n            list={list}\n            grabListInfo={grabListInfo}\n            lists={lists}\n            dispatch={dispatch}\n            selectedListId={selectedList.id}\n            resetListState={resetListState}\n          />\n        ))}\n      </div>\n\n      {<Tasks taskListId={selectedList.id} taskListTitle={selectedList.title} ></Tasks>}\n    </>\n  )\n}\n"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,eAAe,YAAY;EACzB,MAAM;IAAEC,KAAF;IAASC,IAAT;IAAeC;EAAf,IAA4BP,UAAU,CAACG,WAAD,CAA5C;EACA,MAAMK,gBAAgB,GAAG;IAAEC,EAAE,EAAE,IAAN;IAAYC,KAAK,EAAE;EAAnB,CAAzB;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAACO,KAAK,CAAC,CAAD,CAAL,GAAWA,KAAK,CAAC,CAAD,CAAhB,GAAsBG,gBAAvB,CAAhD;;EACA,MAAMK,YAAY,GAAG,CAACJ,EAAD,EAAKC,KAAL,KAAe;IAClCE,eAAe,CAAC;MAAEH,EAAF;MAAMC;IAAN,CAAD,CAAf;EACD,CAFD;;EAGA,MAAMI,UAAU,GAAG,MAAOJ,KAAP,IAAiB;IAClC,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,WAAD,EAAc;MACnCC,MAAM,EAAE,MAD2B;MAEnCC,OAAO,EAAE;QAAE,gBAAgB;MAAlB,CAF0B;MAGnCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBC,MAAM,EAAEhB,IAAI,CAACG,EADM;QAEnBC;MAFmB,CAAf;IAH6B,CAAd,CAAvB;;IAQA,IAAIK,GAAG,CAACQ,EAAR,EAAY;MACV,MAAMC,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAJ,EAAnB;MACAlB,QAAQ,CAAC;QACPmB,IAAI,EAAE,OADC;QAEPC,OAAO,EAAE;UACPtB,KAAK,EAAE,CAAC,GAAGA,KAAJ,EAAWmB,IAAX;QADA;MAFF,CAAD,CAAR;IAMD;EACF,CAlBD;;EAoBA,MAAMI,cAAc,GAAG,MAAM;IAC3BhB,eAAe,CAACJ,gBAAD,CAAf;EACD,CAFD;;EAIAT,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,KAAK,CAACwB,MAAX,EAAmB;MACjBD,cAAc;IACf;EACF,CAJQ,EAIN,CAACvB,KAAD,CAJM,CAAT;EAMA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,wBACE;QAAI,SAAS,EAAC,eAAd;QAAA,oCAEE,QAAC,QAAD;UAAU,YAAY,EAAES,UAAxB;UAAoC,WAAW,EAAC;QAAhD;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAKGT,KAAK,CAACyB,GAAN,CAAWN,IAAD,iBACT,QAAC,IAAD;QACE,MAAM,EAAEA,IAAI,CAACf,EADf;QAGE,IAAI,EAAEe,IAHR;QAIE,YAAY,EAAEX,YAJhB;QAKE,KAAK,EAAER,KALT;QAME,QAAQ,EAAEE,QANZ;QAOE,cAAc,EAAEI,YAAY,CAACF,EAP/B;QAQE,cAAc,EAAEmB;MARlB,GAEOG,MAAM,CAACP,IAAI,CAACf,EAAN,CAAN,GAAkBsB,MAAM,CAACP,IAAI,CAACQ,UAAN,CAF/B;QAAA;QAAA;QAAA;MAAA,QADD,CALH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAoBG,QAAC,KAAD;MAAO,UAAU,EAAErB,YAAY,CAACF,EAAhC;MAAoC,aAAa,EAAEE,YAAY,CAACD;IAAhE;MAAA;MAAA;MAAA;IAAA,QApBH;EAAA,gBADF;AAwBD"},"metadata":{},"sourceType":"module"}